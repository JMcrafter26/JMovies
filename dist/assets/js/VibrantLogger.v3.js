/**
 * VibrantLogger.js
 * A simple console logger with visual style for your projects.
 * @version 1.1.0
 * @author JMcrafter26 <jm26.net>
 * @see {@link https://jm26.net}
 * @see {@link https://github.com/JMcrafter26/vibrant-logger.js}
 * @license MIT
 */
class Logger{constructor(t){"object"!=typeof t&&(t={}),this.name=t.name||"",this.theme=t.theme||"auto";var s=t.customColors||{};this.style=t.style||"auto",this.setConsoleType=t.setConsoleType||!1,this.colorsDark={INFO:"#82AAFF",WARN:"#FFCB6B",ERROR:"#FF5370",SUCCESS:"#C3E88D",DEBUG:"#d382ff",UNKNOWN:"#abb2bf",background:"#434C5E"},this.colorsLight={INFO:"#407dff",WARN:"#ffb62e",ERROR:"#FF5370",SUCCESS:"#a0db48",DEBUG:"#bc40ff",UNKNOWN:"#6e7685",background:"#F5F5F5"},"object"!=typeof s&&(s={}),"dark"!==this.theme&&"light"!==this.theme&&"auto"!==this.theme&&0===Object.keys(s).length?this.colors=this.colorsDark:("auto"===this.theme&&(window.matchMedia&&window.matchMedia("(prefers-color-scheme: light)").matches?this.theme="light":this.theme="dark"),"dark"===this.theme&&(this.colors=this.colorsDark),"light"===this.theme&&(this.colors=this.colorsLight),0!==Object.keys(s).length&&(this.colors=s))}log(t="No message provided",s="INFO"){const o=s;this.colors[s]||(s="UNKNOWN"),"time"===this.name&&(this.name=(new Date).toLocaleTimeString());var e=(new Error).stack.split("\n"),i=e[2].split("/").pop().split(":")[0],h=e[3].split("/").pop().split(":")[0]+":"+e[3].split("/").pop().split(":")[1];"file"===this.name&&(this.name=h);const r=7*(t.length+s.length+this.name.length+6)>window.outerWidth-window.innerWidth-i.length-180;"maxi"!==this.style||r?""===this.name||this.name:""===this.name||this.name,r||"auto"!==this.style?(r||"maxi"===this.style)&&(`background: ${this.colors[s]}; color: ${this.colors.background}; padding: 1px; border-radius: 3px 3px 0 0;`,this.colors.background,this.colors[s]):(`background: ${this.colors[s]}; color: ${this.colors.background}; padding: 1px; border-radius: 3px 0 0 3px;`,this.colors.background,this.colors[s]),this.setConsoleType}info(t){this.log(t,"INFO")}warn(t){this.log(t,"WARN")}error(t){this.log(t,"ERROR")}success(t){this.log(t,"SUCCESS")}debug(t){this.log(t,"DEBUG")}unknown(t){this.log(t,"UNKNOWN")}}